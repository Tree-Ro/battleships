(()=>{"use strict";var n={208:(n,o,r)=>{r.d(o,{A:()=>s});var e=r(354),t=r.n(e),a=r(314),i=r.n(a)()(t());i.push([n.id,':root {\n  --main-bg-colour: #363636;\n  --board-cell-colour: #252525;\n  --ship-hit-colour: #ff0000;\n  --water-colour: #05a5d6;\n  --ship-colour: #FFFFFF;\n}\n\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\n\nhtml {\n  height: 100%;\n\n  color: white;\n  background-color: var(--main-bg-colour);\n}\n\nbody {\n  height: 100%;\n\n  box-sizing: border-box;\n  font-family: -apple-system, \n  BlinkMacSystemFont,"Segoe UI","Roboto","Oxygen",\n  "Ubuntu","Cantarell","Fira Sans","Droid Sans",\n  "Helvetica Neue",sans-serif;\n\n  display: grid;\n  grid-template-rows: 200px 1fr;\n}\n\n#header {\n  display: grid;\n  place-items: center;\n\n  text-shadow: #252525 4px 4px;\n}\n\n#board-container {\n  width: 100%;\n\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(49%, 1fr));\n\n  grid-gap: 25px;\n}\n\n#board-container #introduction {\n  display: grid;\n  grid-gap: 15px;\n\n  justify-self: center;\n  align-self: flex-start;\n\n  grid-column: 1/-1;\n\n  padding: 25px;\n\n  background-color: var(--board-cell-colour);\n  border-radius: 10px;\n\n  grid-template-rows: 45px 25px 45px;\n}\n\n#introduction .colour-info{\n  display: grid;\n  grid-auto-flow: column;\n  place-items: center;\n  grid-template-columns: repeat(3, 1fr);\n}\n\n#introduction .colour-info > div {\n  font-weight: 600;\n}\n#introduction .colour-info > .water {\n  color: var(--water-colour);\n}\n#introduction .colour-info > .ship { \n  color: var(--ship-colour);\n}\n#introduction .colour-info > .hit {\n  color: var(--ship-hit-colour);\n}\n\n#introduction button {\n  color: white;\n  margin-top: 15px;\n  width: 80%;\n  justify-self: center;\n\n  background-color: var(--main-bg-colour);\n  border: none;\n  border-radius: 5px;\n  box-shadow: black 2px 2px 6px;\n\n  transition: 0.1s;\n}\n#introduction button:hover {\n  background-color:  white;\n  color: black;\n\n  transform: scale(1.02);\n  transition: 0.1s;\n}\n#introduction button:active {\n  transform: scale(0.99)\n}\n\n#board-container .gameboard {\n  height: 550px;\n  width: 550px;\n  border: 1px solid var();\n  \n  justify-self: center;\n\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n\n  box-shadow: rgba(0, 0, 0, 0.76) 5px 5px 20px;\n}\n.gameboard div#row {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  user-select: none;\n}\n.gameboard div#row > div {\n  border: 1px solid #181818ab;\n  transition: 0.5s;\n}\n.gameboard div#row > div:hover {\n  transition: 0.15s ;\n  transform: scale(1.05);\n  border: 3px solid var(--board-cell-colour);\n}\n.gameboard div#row .undiscovered {\n  background-color: var(--board-cell-colour);\n}\n.gameboard div#row .undiscovered:hover {\n  background-color: white;\n}\n.gameboard div#row .water {\n  background-color: var(--water-colour);\n}\n.gameboard div#row > #hit {\n  background-color: var(--ship-hit-colour);\n}\n.gameboard div#row .ship {\n  background-color: var(--ship-colour);\n}\n\n.gameboard div#row .miss {\n  position: relative;\n}\n.gameboard div#row .miss::before {\n  display: block;\n  content: \'\'; \n  position: absolute; \n  top: 50%; \n  left: 50%;\n  width: 12px;\n  height: 12px; \n  background-color: var(--board-cell-colour); \n  border-radius: 50%; \n  transform: translate(-50%, -50%);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,4BAA4B;EAC5B,0BAA0B;EAC1B,uBAAuB;EACvB,sBAAsB;AACxB;;AAEA;;;EAGE,SAAS;EACT,UAAU;EACV,mBAAmB;AACrB;;AAEA;EACE,YAAY;;EAEZ,YAAY;EACZ,uCAAuC;AACzC;;AAEA;EACE,YAAY;;EAEZ,sBAAsB;EACtB;;;6BAG2B;;EAE3B,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,mBAAmB;;EAEnB,4BAA4B;AAC9B;;AAEA;EACE,WAAW;;EAEX,aAAa;EACb,0DAA0D;;EAE1D,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,cAAc;;EAEd,oBAAoB;EACpB,sBAAsB;;EAEtB,iBAAiB;;EAEjB,aAAa;;EAEb,0CAA0C;EAC1C,mBAAmB;;EAEnB,kCAAkC;AACpC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,qCAAqC;AACvC;;AAEA;EACE,gBAAgB;AAClB;AACA;EACE,0BAA0B;AAC5B;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,6BAA6B;AAC/B;;AAEA;EACE,YAAY;EACZ,gBAAgB;EAChB,UAAU;EACV,oBAAoB;;EAEpB,uCAAuC;EACvC,YAAY;EACZ,kBAAkB;EAClB,6BAA6B;;EAE7B,gBAAgB;AAClB;AACA;EACE,wBAAwB;EACxB,YAAY;;EAEZ,sBAAsB;EACtB,gBAAgB;AAClB;AACA;EACE;AACF;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,uBAAuB;;EAEvB,oBAAoB;;EAEpB,aAAa;EACb,mCAAmC;;EAEnC,4CAA4C;AAC9C;AACA;EACE,aAAa;EACb,sCAAsC;EACtC,iBAAiB;AACnB;AACA;EACE,2BAA2B;EAC3B,gBAAgB;AAClB;AACA;EACE,kBAAkB;EAClB,sBAAsB;EACtB,0CAA0C;AAC5C;AACA;EACE,0CAA0C;AAC5C;AACA;EACE,uBAAuB;AACzB;AACA;EACE,qCAAqC;AACvC;AACA;EACE,wCAAwC;AAC1C;AACA;EACE,oCAAoC;AACtC;;AAEA;EACE,kBAAkB;AACpB;AACA;EACE,cAAc;EACd,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,WAAW;EACX,YAAY;EACZ,0CAA0C;EAC1C,kBAAkB;EAClB,gCAAgC;AAClC",sourcesContent:[':root {\n  --main-bg-colour: #363636;\n  --board-cell-colour: #252525;\n  --ship-hit-colour: #ff0000;\n  --water-colour: #05a5d6;\n  --ship-colour: #FFFFFF;\n}\n\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\n\nhtml {\n  height: 100%;\n\n  color: white;\n  background-color: var(--main-bg-colour);\n}\n\nbody {\n  height: 100%;\n\n  box-sizing: border-box;\n  font-family: -apple-system, \n  BlinkMacSystemFont,"Segoe UI","Roboto","Oxygen",\n  "Ubuntu","Cantarell","Fira Sans","Droid Sans",\n  "Helvetica Neue",sans-serif;\n\n  display: grid;\n  grid-template-rows: 200px 1fr;\n}\n\n#header {\n  display: grid;\n  place-items: center;\n\n  text-shadow: #252525 4px 4px;\n}\n\n#board-container {\n  width: 100%;\n\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(49%, 1fr));\n\n  grid-gap: 25px;\n}\n\n#board-container #introduction {\n  display: grid;\n  grid-gap: 15px;\n\n  justify-self: center;\n  align-self: flex-start;\n\n  grid-column: 1/-1;\n\n  padding: 25px;\n\n  background-color: var(--board-cell-colour);\n  border-radius: 10px;\n\n  grid-template-rows: 45px 25px 45px;\n}\n\n#introduction .colour-info{\n  display: grid;\n  grid-auto-flow: column;\n  place-items: center;\n  grid-template-columns: repeat(3, 1fr);\n}\n\n#introduction .colour-info > div {\n  font-weight: 600;\n}\n#introduction .colour-info > .water {\n  color: var(--water-colour);\n}\n#introduction .colour-info > .ship { \n  color: var(--ship-colour);\n}\n#introduction .colour-info > .hit {\n  color: var(--ship-hit-colour);\n}\n\n#introduction button {\n  color: white;\n  margin-top: 15px;\n  width: 80%;\n  justify-self: center;\n\n  background-color: var(--main-bg-colour);\n  border: none;\n  border-radius: 5px;\n  box-shadow: black 2px 2px 6px;\n\n  transition: 0.1s;\n}\n#introduction button:hover {\n  background-color:  white;\n  color: black;\n\n  transform: scale(1.02);\n  transition: 0.1s;\n}\n#introduction button:active {\n  transform: scale(0.99)\n}\n\n#board-container .gameboard {\n  height: 550px;\n  width: 550px;\n  border: 1px solid var();\n  \n  justify-self: center;\n\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n\n  box-shadow: rgba(0, 0, 0, 0.76) 5px 5px 20px;\n}\n.gameboard div#row {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  user-select: none;\n}\n.gameboard div#row > div {\n  border: 1px solid #181818ab;\n  transition: 0.5s;\n}\n.gameboard div#row > div:hover {\n  transition: 0.15s ;\n  transform: scale(1.05);\n  border: 3px solid var(--board-cell-colour);\n}\n.gameboard div#row .undiscovered {\n  background-color: var(--board-cell-colour);\n}\n.gameboard div#row .undiscovered:hover {\n  background-color: white;\n}\n.gameboard div#row .water {\n  background-color: var(--water-colour);\n}\n.gameboard div#row > #hit {\n  background-color: var(--ship-hit-colour);\n}\n.gameboard div#row .ship {\n  background-color: var(--ship-colour);\n}\n\n.gameboard div#row .miss {\n  position: relative;\n}\n.gameboard div#row .miss::before {\n  display: block;\n  content: \'\'; \n  position: absolute; \n  top: 50%; \n  left: 50%;\n  width: 12px;\n  height: 12px; \n  background-color: var(--board-cell-colour); \n  border-radius: 50%; \n  transform: translate(-50%, -50%);\n}'],sourceRoot:""}]);const s=i},314:n=>{n.exports=function(n){var o=[];return o.toString=function(){return this.map((function(o){var r="",e=void 0!==o[5];return o[4]&&(r+="@supports (".concat(o[4],") {")),o[2]&&(r+="@media ".concat(o[2]," {")),e&&(r+="@layer".concat(o[5].length>0?" ".concat(o[5]):""," {")),r+=n(o),e&&(r+="}"),o[2]&&(r+="}"),o[4]&&(r+="}"),r})).join("")},o.i=function(n,r,e,t,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(e)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);e&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),t&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=t):l[4]="".concat(t)),o.push(l))}},o}},354:n=>{n.exports=function(n){var o=n[1],r=n[3];if(!r)return o;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),t="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),a="/*# ".concat(t," */");return[o].concat([a]).join("\n")}return[o].join("\n")}},72:n=>{var o=[];function r(n){for(var r=-1,e=0;e<o.length;e++)if(o[e].identifier===n){r=e;break}return r}function e(n,e){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],A=e.base?c[0]+e.base:c[0],l=a[A]||0,d="".concat(A," ").concat(l);a[A]=l+1;var u=r(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)o[u].references++,o[u].updater(p);else{var f=t(p,e);e.byIndex=s,o.splice(s,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function t(n,o){var r=o.domAPI(o);return r.update(n),function(o){if(o){if(o.css===n.css&&o.media===n.media&&o.sourceMap===n.sourceMap&&o.supports===n.supports&&o.layer===n.layer)return;r.update(n=o)}else r.remove()}}n.exports=function(n,t){var a=e(n=n||[],t=t||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=r(a[i]);o[s].references--}for(var c=e(n,t),A=0;A<a.length;A++){var l=r(a[A]);0===o[l].references&&(o[l].updater(),o.splice(l,1))}a=c}}},659:n=>{var o={};n.exports=function(n,r){var e=function(n){if(void 0===o[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}o[n]=r}return o[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(r)}},540:n=>{n.exports=function(n){var o=document.createElement("style");return n.setAttributes(o,n.attributes),n.insert(o,n.options),o}},56:(n,o,r)=>{n.exports=function(n){var o=r.nc;o&&n.setAttribute("nonce",o)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var o=n.insertStyleElement(n);return{update:function(r){!function(n,o,r){var e="";r.supports&&(e+="@supports (".concat(r.supports,") {")),r.media&&(e+="@media ".concat(r.media," {"));var t=void 0!==r.layer;t&&(e+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),e+=r.css,t&&(e+="}"),r.media&&(e+="}"),r.supports&&(e+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),o.styleTagTransform(e,n,o.options)}(o,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(o)}}}},113:n=>{n.exports=function(n,o){if(o.styleSheet)o.styleSheet.cssText=n;else{for(;o.firstChild;)o.removeChild(o.firstChild);o.appendChild(document.createTextNode(n))}}}},o={};function r(e){var t=o[e];if(void 0!==t)return t.exports;var a=o[e]={id:e,exports:{}};return n[e](a,a.exports,r),a.exports}r.n=n=>{var o=n&&n.__esModule?()=>n.default:()=>n;return r.d(o,{a:o}),o},r.d=(n,o)=>{for(var e in o)r.o(o,e)&&!r.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:o[e]})},r.o=(n,o)=>Object.prototype.hasOwnProperty.call(n,o),r.nc=void 0,(()=>{var n=r(72),o=r.n(n),e=r(825),t=r.n(e),a=r(659),i=r.n(a),s=r(56),c=r.n(s),A=r(540),l=r.n(A),d=r(113),u=r.n(d),p=r(208),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=t(),f.insertStyleElement=l(),o()(p.A,f),p.A&&p.A.locals&&p.A.locals;const h=class{constructor(){this.gameboard=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,o=function(n){let o=[];for(let r=0;r<n;++r){o[r]=[];for(let e=0;e<n;++e){let n={isHit:!1,isShip:!1,shipInstance:null};o[r].push(n)}}return o}(n),r=[],e=[];function t(n,e){if(!a(n,e))return null;let[t,i]=n,[s,c]=e;const A=[t-s,i-c];let l=+A.filter(Boolean);l+=Math.sign(l);const d=function(n){let o=n,r=0;return{hit:function(){return r++,r},isSunk:function(){return r>=o}}}(Math.abs(l));r.push(d);const u=!!A[0];for(let n=l;0!==n;n-=Math.sign(n))o[t][i].isShip=!0,o[t][i].shipInstance=d,u?t++:i++}function a(r,e){let[t,a]=r,[i,s]=e;const c=[t-i,a-s];if(1!==c.filter(Boolean).length)return null;if([t,a,i,s].filter((o=>o>n-1||o<0)).length)return null;let A=+c.filter(Boolean);A+=Math.sign(A);let l=!!c[0];for(let n=A;0!==n;n-=Math.sign(n)){if(o[t][a].isShip)return null;l?t++:a++}return!0}function i(n){if(!s(n))return null;const[r,e]=n,t=o[r][e];return t.isHit=!0,t.isShip&&t.shipInstance.hit(),t}function s(r){const[e,t]=r;return[e,t].filter((o=>o>n-1||o<0)).length?null:!o[e][t].isHit||null}return{state:function(){return o},recieveAttack:i,allShipsSunken:function(){const n=r.filter((n=>{if(n.isSunk())return n}));return n.length===r.length},addNewSetOfShips:function(){for(const n of[5,4,3,3,2]){const o=n-1;if(Math.random()>.5)for(;;){let n=Math.round(10*Math.random())-1,r=Math.round(10*Math.random())-1;for(;r+o>9;)r--;let e=[n,r],i=[n,r+o];if(a(e,i)){t(e,i);break}}else for(;;){let n=Math.round(10*Math.random())-1,r=Math.round(10*Math.random())-1;for(;n+o>9;)n--;let e=[n,r],i=[n+o,r];if(a(e,i)){t(e,i);break}}}},getShotByNPC:function(){if(e=[...new Set(e)],e.length<=0)for(;;){let n=[];if(n.push(Math.round(10*Math.random()-1)),n.push(Math.round(10*Math.random()-1)),s(n)){e.push(n);break}}let n=e.shift();for(;!s(n);)n=e.shift();if(i(n).isShip)for(const o of[[1,0],[0,1],[-1,0],[0,-1]]){const[r,t]=n,[a,i]=o,[c,A]=[r+a,t+i];s([c,A])&&(e.push([c,A]),console.log(e))}return n}}}()}};let g,m,C=!0;function b(n,o,r){const e=("player"===n.parentNode.parentNode.id?g:m).gameboard.state()[o][r];e.isHit&&e.isShip?(n.classList.remove("undiscovered"),n.id="hit"):e.isHit&&(n.classList.remove("undiscovered"),n.classList.add("water"),n.classList.add("miss"))}document.querySelector("#introduction button").addEventListener("click",(function n(){g=new h,m=new h;const o=function(){g.gameboard.addNewSetOfShips();const n=g.gameboard.state(),o=document.createElement("div");o.id="player",o.classList="gameboard";for(let r=0;r<10;r++){const e=document.createElement("div");e.id="row",o.append(e);for(let o=0;o<10;o++){const t=n[r][o],a=document.createElement("div");a.classList.add("water"),t.isHit&&t.isShip?a.classList.add("hit"):(t.isHit&&a.classList.add("miss"),t.isShip&&a.classList.add("ship")),e.append(a)}}return o}(),r=function(){m.gameboard.addNewSetOfShips();const o=document.createElement("div");o.id="npc",o.classList="gameboard";for(let r=0;r<10;r++){const e=document.createElement("div");e.id="row",o.append(e);for(let o=0;o<10;o++){const t=document.createElement("div");t.classList.add("undiscovered"),t.addEventListener("click",(e=>{if(C){const n=m.gameboard.recieveAttack([r,o]);b(e.target,r,o),n&&(C=!1,setTimeout((()=>{const[n,o]=g.gameboard.getShotByNPC(),r=document.querySelector("#player").children[n].children[o];console.log(r),b(r,n,o),C=!0}),500))}if(m.gameboard.allShipsSunken()||g.gameboard.allShipsSunken()){const o=setTimeout((()=>{confirm((g.gameboard.allShipsSunken()?"Your ships got sunk first :(":"You sank all enemy ships!")+"\n              Do you want to play another game?"),!0===o?n():location.reload()}),400)}})),e.append(t)}}return o}(),e=document.querySelector("#board-container");for(;e.children.length;)e.removeChild(e.children[0]);e.append(o),e.append(r)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,